/**
 * 判断当前环境是否是 app
 * @param  {string}  name app 名称，支持名字 [ wx, qq, weibo, jd ]
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isApp(name, ua) {
	ua = ua || navigator.userAgent;
	if (name === 'wx') return /micromessenger/i.test(ua);
	if (name === 'qq') return /qq\//i.test(ua);
	if (name === 'weibo') return /weibo/i.test(ua);
	if (name === 'jd') return /^jdapp/i.test(ua);
	return false;
}

/**
 * 判断是否为 android 设备
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isAndroid(ua) {
	ua = ua || navigator.userAgent;
	return /android/i.test(ua);
}

/**
 * 判断是否为 ios 设备
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isIOS(ua) {
	ua = ua || navigator.userAgent;
	return /ip(hone|od)|ipad/i.test(ua);
}

/**
 * 判断是否为平板设备
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isTablet(ua) {
	ua = ua || navigator.userAgent;
	return /ipad/i.test(ua)
		|| (/android/i.test(ua) && !/mobi|mini|fennec/i.test(ua));
}

/**
 * 判断是否为手机设备
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isMobile(ua) {
	ua = ua || navigator.userAgent;
	return !!ua.match(/ip(hone|od)|android.+mobile|windows (ce|phone)|blackberry|bb10|symbian|webos|firefox.+fennec|opera m(ob|in)i|polaris|iemobile|lgtelecom|nokia|sonyericsson|dolfin|uzard|natebrowser|ktf;|skt;/i);
}

/**
 * 判断是否为iphone
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isIPhone(ua) {
	ua = ua || navigator.userAgent;
	return !!ua.match(/iphone/i);
}

/**
 * 判断是否为iphone
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isIPad(ua) {
	ua = ua || navigator.userAgent;
	return !!ua.match(/ipad/i);
}

/**
 * 判断是否为jdApp内的WKWebview
 * @param  {string}  name webview 名称，支持名字 [ xview, wk ]
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function isWebview(name, ua) {
	ua = ua || navigator.userAgent;
	if (name === 'xview') return typeof window.XView !== 'undefined';
	if (name === 'wk') return !!ua.match(/supportjdshwk/i);
	return false;
}

/**
 * 返回网络类型
 * @param  {string}  [ua]   userAgent 字符串
 * @return {string}
 */
export function getNetwork(ua) {
	ua = ua || navigator.userAgent;
	let re = /nettype\/([\S]*)/i;

	if (isApp('jd', ua))
		re = /network\/([^;]*)/i;

	return re.test(ua) ? RegExp.$1.toLowerCase() : 'unknown';
}

/**
 * 获取 jd app 的 uuid
 * @param  {string}  [ua]   userAgent 字符串
 * @return {string}
 */
export function getUUID(ua) {
	ua = ua || navigator.userAgent;
	if (!isApp('jd', ua)) return null;
	return ua.split(';')[4];
}

/**
 * 获取 app 版本信息
 * @param  {string}  appName app 名称，支持名字 [ wx, qq, jd ]
 * @param  {string}  [ua]   userAgent 字符串
 * @return {Boolean}
 */
export function getAppVersion(appName, ua) {
	ua = ua || navigator.userAgent;

	if (appName === 'jd') return ua.split(';')[2] || null;
	if (appName === 'wx') return /micromessenger\/([\S]*)/i.test(ua) ? RegExp.$1 : null;
	if (appName === 'qq') return /qq\/([\S]*)/i.test(ua) ? RegExp.$1 : null;

	return null;
}

/**
 * 获取 android 版本号
 * @param {string} [ua] userAgent 字符串
 * @return {string}
 */
export function getAndroidVersion(ua) {
	ua = ua || navigator.userAgent;
	let match = ua.match(/android\s([0-9\.]*)/i);
	return match ? match[1] : 'unknown';
}

/**
 * 获取 ios 版本号
 * @param {string} [ua] userAgent 字符串
 * @return {string}
 */
export function getIOSVersion(ua) {
	ua = ua || navigator.userAgent;
	let match = ua.match(/OS ((\d+_?){2,3})\s/i);
    return match ? match[1].replace(/_/g, '.') : 'unknown';
}
