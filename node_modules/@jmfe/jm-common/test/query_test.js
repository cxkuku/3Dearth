import { getUrlQuery, serialize } from '../src/query';

describe('Query', () => {
	describe('getUrlQuery()', () => {
		it ('should return all data', () => {
			let result = getUrlQuery('a=1&b=2');
			result.should.eql({a: '1', b: '2'});
		});

		it ('should return specified data', () => {
			let result = getUrlQuery('a=1&b=2', 'a');
			result.should.equal('1');
		});

		it ('should return data with selected', () => {
			let result = getUrlQuery('a=1&b=2', ['a', 'c']);
			result.should.eql({a: '1', c: null});
		});

		it('should result with current url in browser', () => {
			let result = getUrlQuery(['a', 'c']);
			result.should.eql({a: null, c: null});
		});
	});

	describe('serialize()', () => {
		it('should transfer data to query string', function () {
			const data = {a: 1, b: 2};
			serialize(data).should.equal('a=1&b=2');
		});
	});
});
