import * as env from '../src/env';
import * as mockUA from './mock-ua';

describe('Env', () => {
	let ua = navigator.userAgent;

	describe('isApp()', () => {
		it('should return false for normal browser', () => {
			env.isApp().should.be.false;
		});

		it('should work with `jd` app', () => {
			env.isApp('jd').should.be.false;
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.isApp('jd').should.be.true;
		});

		it('should work with `wechat` app', () => {
			env.isApp('wx').should.be.false;
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.iphone);
			env.isApp('wx').should.be.true;
		});

		it('should work with `qq` app', () => {
			env.isApp('qq').should.be.false;
			navigator.__defineGetter__('userAgent', () =>  mockUA.qq.iphone);
			env.isApp('qq').should.be.true;
		});

		it('should work with `weibo` app', () => {
			env.isApp('weibo').should.be.false;
			navigator.__defineGetter__('userAgent', () =>  ua + ' weibo');
			env.isApp('weibo').should.be.true;
		});

		it('should work with given ua param', () => {
			env.isApp('jd', mockUA.jdapp.iphone).should.be.true;
		});
	});

	describe('isAndroid()', () => {
		it('should work with `jd` app', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.android);
			env.isAndroid().should.be.true;
		});

		it('should work with `wechat`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.android);
			env.isAndroid().should.be.true;
		});

		it('should work with `qq`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.qq.android);
			env.isAndroid().should.be.true;
		});
	});

	describe('isIOS()', () => {
		it('should work for `jd` app', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.isIOS().should.be.true;
		});

		it('should work for `wechat`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.iphone);
			env.isIOS().should.be.true;
		});

		it('should work for `qq`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.qq.iphone);
			env.isIOS().should.be.true;
		});
	});

	describe('isIPhone()', () => {
		it('should work iphone device', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.isIPhone().should.be.true;
		});

		it('should not work ipad device', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.ipad);
			env.isIPhone().should.be.false;
		});
	});

	describe('isIPad()', () => {
		it('should work ipad device', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.ipad);
			env.isIPad().should.be.true;
		});

		it('should not work iphone device', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.isIPad().should.be.false;
		});
	});

	describe('isTablet()', () => {
		it('should work for ipad', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.ipad);
			env.isTablet().should.be.true;
		});
	});

	describe('isMobile()', () => {
		it('should work for iphone', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.iphone);
			env.isMobile().should.be.true;
		});

		it('should work for android', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.android);
			env.isMobile().should.be.true;
		});
	});

	describe('isWebview()', () => {
		it('should return false for normal browser', () => {
			env.isWebview().should.be.false;
		});

		it('should work with `wkwebview` webview', () => {
			env.isWebview('wk').should.be.false;
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.wkwebview);
			env.isWebview('wk').should.be.true;
		});

		it('should work with `xview` app', () => {
			env.isWebview('xview').should.be.false;
			window.XView = true;
			env.isWebview('xview').should.be.true;
		});
	});

	describe('getNetwork()', () => {
		it('should work for `jd` app', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.getNetwork().should.equal('wifi');
		});

		it('should work for `wechat`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.android);
			env.getNetwork().should.equal('wifi');
		});

		it('should work for `qq`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.qq.android);
			env.getNetwork().should.equal('wifi');
		});

		it('should return "unknown" if it is not detected', () => {
			navigator.__defineGetter__('userAgent', () =>  ua);
			env.getNetwork().should.equal('unknown');
		});
	});

	describe('getAppVersion()', () => {
		it('should work for `jd` app', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.getAppVersion('jd').should.equal('5.2.0');
		});

		it('should work for `wechat`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.wechat.iphone);
			env.getAppVersion('wx').should.equal('6.3.25');
		});

		it('should work for `qq`', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.qq.iphone);
			env.getAppVersion('qq').should.equal('6.5.3.410');
		});
	});

	describe('getUUID()', () => {
		it('should work for iphone', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.getUUID().should.equal('037edd72999a53dba697a6379b715f015e1beaf2');
		});

		it('should work for android', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.android);
			env.getUUID().should.equal('869949021137516-020000000000');
		});
	});

	describe('getAndroidVersion()', () => {
		it('should get the android version', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.android);
			env.getAndroidVersion().should.equal('6.0');
		});
	});

	describe('getIOSVersion()', () => {
		it('should get the ios version', () => {
			navigator.__defineGetter__('userAgent', () =>  mockUA.jdapp.iphone);
			env.getIOSVersion().should.equal('8.4');
		});
	});

	after(() => {
		navigator.__defineGetter__('userAgent', () => ua);
	});
});
